# -*- coding: utf-8 -*-
"""assessment-app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TNsD1sXI9m6eTIh1gSnf5L7lmg9LRiyU
"""

from pycaret.classification import load_model, predict_model
import streamlit as st
import pandas as pd
import numpy as np
import pickle

model = load_model('Final RF Model 23JUL2021')

def predict(model, input_df):
    predictions_df = predict_model(estimator = model, data=input_df)
    predictions = predictions_df['Label'][0]
    return predictions

def run():

    add_selectobx = st.sidebar.selectbox(
    "How would you like to predict?",
    ("Online","Batch"))

    st.sidebar.info('This app is created to assess the organizations analytical maturity')
    st.sidebar.success('https://www.datadojo.co.in')    

    st.title("Analytical Maturity Assessment Application")

    if add_selectbox == 'Online':

        AHT = st.number_input('AHT', min_value=90, max_value=1000, value=200)
        NTT = st.number_input('NTT', min_value=30, max_value=300, value=100)
        Sentiment = st.number_input('Sentiment', min_value=-5, max_value=10, value=1)
        Complaints = st.number_input('Complaints', min_value=0.01, max_value=0.10, value=0.05)
        Repeats = st.number_input('Repeats', min_value=0.01, max_value=0.10, value=0.05)

    output = ""

    input_dict = {'AHT','NTT','Sentiment','Complaints','Repeats'}
    input_df = pd.DataFrame([input_dict])

    if st.button("Predict"):
        output = predict(model=model, input_df=input_df)
        output = '$' + str(output)

    st.success('The out is {}'.format(output))

    if add_selectbox == 'Batch':

        file_upload = st.file_uploader("Upload csv file for predictions", type["csv"])

        if file_upload is not None:
            data = pd.read_csv(file_upload)
            predictions = predict_model(estimator=model,data=data)
            st.write(predictions)